Traceback (most recent call last):
  File "C:\Users\ahmad\AppData\Local\Programs\Python\Python310\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\ahmad\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\ahmad\AppData\Local\Programs\Python\Python310\lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\ahmad\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py", line 646, in run_until_complete
    return future.result()
  File "C:\Users\ahmad\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\ahmad\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\ahmad\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
p1_test = c1.predict(X_test)
p2_test = c2.predict(X_test)
p1_series2 = pd.Series(p1_test, index=y_test.index, name='p1_test')
p2_series2 = pd.Series(p2_test, index=y_test.index, name='p2_test')

# Concatenate predictions and y_train
df_meta_test = pd.concat([p1_series2, p2_series2], axis=1)
df_meta_test.columns = ['p1_test', 'p2_test']

df_meta_test['p1_test'] = label_encoder.fit_transform(df_meta_test['p1_test'])
df_meta_test['p2_test'] = label_encoder.fit_transform(df_meta_test['p2_test'])

df_meta_test[['p1_test', 'p2_test']]



predictions = gnb_model.predict(df_meta_test)



accuracy_meta = accuracy_score(y_test, predictions)

print(accuracy_meta)
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
Cell [1;32mIn[54], line 17[0m
[0;32m     11[0m df_meta_test[[38;5;124m'[39m[38;5;124mp2_test[39m[38;5;124m'[39m] [38;5;241m=[39m label_encoder[38;5;241m.[39mfit_transform(df_meta_test[[38;5;124m'[39m[38;5;124mp2_test[39m[38;5;124m'[39m])
[0;32m     13[0m df_meta_test[[[38;5;124m'[39m[38;5;124mp1_test[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mp2_test[39m[38;5;124m'[39m]]
[1;32m---> 17[0m predictions [38;5;241m=[39m [43mgnb_model[49m[38;5;241;43m.[39;49m[43mpredict[49m[43m([49m[43mdf_meta_test[49m[43m)[49m
[0;32m     21[0m accuracy_meta [38;5;241m=[39m accuracy_score(y_test, predictions)
[0;32m     23[0m [38;5;28mprint[39m(accuracy_meta)

File [1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\naive_bayes.py:101[0m, in [0;36m_BaseNB.predict[1;34m(self, X)[0m
[0;32m     87[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[0;32m     88[0m [38;5;124;03mPerform classification on an array of test vectors X.[39;00m
[0;32m     89[0m 
[1;32m   (...)[0m
[0;32m     98[0m [38;5;124;03m    Predicted target values for X.[39;00m
[0;32m     99[0m [38;5;124;03m"""[39;00m
[0;32m    100[0m check_is_fitted([38;5;28mself[39m)
[1;32m--> 101[0m X [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_check_X[49m[43m([49m[43mX[49m[43m)[49m
[0;32m    102[0m jll [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_joint_log_likelihood(X)
[0;32m    103[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mclasses_[np[38;5;241m.[39margmax(jll, axis[38;5;241m=[39m[38;5;241m1[39m)]

File [1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\naive_bayes.py:269[0m, in [0;36mGaussianNB._check_X[1;34m(self, X)[0m
[0;32m    267[0m [38;5;28;01mdef[39;00m [38;5;21m_check_X[39m([38;5;28mself[39m, X):
[0;32m    268[0m [38;5;250m    [39m[38;5;124;03m"""Validate X, used only in predict* methods."""[39;00m
[1;32m--> 269[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_data[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43mreset[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m)[49m

File [1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:608[0m, in [0;36mBaseEstimator._validate_data[1;34m(self, X, y, reset, validate_separately, cast_to_ndarray, **check_params)[0m
[0;32m    537[0m [38;5;28;01mdef[39;00m [38;5;21m_validate_data[39m(
[0;32m    538[0m     [38;5;28mself[39m,
[0;32m    539[0m     X[38;5;241m=[39m[38;5;124m"[39m[38;5;124mno_validation[39m[38;5;124m"[39m,
[1;32m   (...)[0m
[0;32m    544[0m     [38;5;241m*[39m[38;5;241m*[39mcheck_params,
[0;32m    545[0m ):
[0;32m    546[0m [38;5;250m    [39m[38;5;124;03m"""Validate input data and set or check the `n_features_in_` attribute.[39;00m
[0;32m    547[0m 
[0;32m    548[0m [38;5;124;03m    Parameters[39;00m
[1;32m   (...)[0m
[0;32m    606[0m [38;5;124;03m        validated.[39;00m
[0;32m    607[0m [38;5;124;03m    """[39;00m
[1;32m--> 608[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_check_feature_names[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43mreset[49m[38;5;241;43m=[39;49m[43mreset[49m[43m)[49m
[0;32m    610[0m     [38;5;28;01mif[39;00m y [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m [38;5;28mself[39m[38;5;241m.[39m_get_tags()[[38;5;124m"[39m[38;5;124mrequires_y[39m[38;5;124m"[39m]:
[0;32m    611[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[0;32m    612[0m             [38;5;124mf[39m[38;5;124m"[39m[38;5;124mThis [39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m estimator [39m[38;5;124m"[39m
[0;32m    613[0m             [38;5;124m"[39m[38;5;124mrequires y to be passed, but the target y is None.[39m[38;5;124m"[39m
[0;32m    614[0m         )

File [1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:535[0m, in [0;36mBaseEstimator._check_feature_names[1;34m(self, X, reset)[0m
[0;32m    530[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m missing_names [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m unexpected_names:
[0;32m    531[0m     message [38;5;241m+[39m[38;5;241m=[39m (
[0;32m    532[0m         [38;5;124m"[39m[38;5;124mFeature names must be in the same order as they were in fit.[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[0;32m    533[0m     )
[1;32m--> 535[0m [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(message)

[1;31mValueError[0m: The feature names should match those that were passed during fit.
Feature names unseen at fit time:
- p1_test
- p2_test
Feature names seen at fit time, yet now missing:
- p1
- p2


